# -_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-__-_-_-_-_-_-_-_-_-_-_-_
# Adjust Terminal O/P
# 
BOLD='%B'
RED='%F{red}'
GREEN='%F{green}'
BLUE='%F{blue}'
RESET='%f%b'
DIR_COLOR='%F{blue}' # Blue for directories
FILE_COLOR='%F{green}' # Green for regular files
# Set LS_COLORS for ls and other commands in a Zsh-compatible way
export LS_COLORS="di=$DIR_COLOR:fi=$FILE_COLOR"
#
# Function to get Git branch
git_branch() {
  local branch=""
  if git rev-parse --git-dir > /dev/null 2>&1; then
    branch=$(git symbolic-ref -q HEAD || git describe --tags --exact-match 2>/dev/null)
    branch=${branch##refs/heads/}
  fi
  [[ -n $branch ]] && echo "($branch) " || echo " "
}
# Set your prompt with Git branch in parentheses for Zsh
autoload -U add-zsh-hook
add-zsh-hook precmd update_ps1
#
update_ps1() {
    # Extract the Python environment name
    local py_env=""
    if [[ -n "$VIRTUAL_ENV" ]]; then
        py_env=" <$(basename $VIRTUAL_ENV)>" #control T op
    elif [[ -n "$CONDA_DEFAULT_ENV" ]]; then
        py_env=" <$CONDA_DEFAULT_ENV>"       #control T op
    fi
    # Set your bold colored prompt with Python env, Git branch, and other details
    PS1="${RED}>${py_env}${GREEN}[%1~]${BLUE}$(git_branch)$ ${RESET}"
}
# -_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-__-_-_-_-_-_-_-_-_-_-_-_
# ALIAS
alias c="clear"